#!/bin/sh

#   standard_space_roi - align input image to standard space and
#   output ROI version of input that matches the standard space FOV
#
#   Stephen Smith, FMRIB Image Analysis Group
#
#   Copyright (C) 2005 University of Oxford
#
#   SHCOPYRIGHT

Usage() {
    echo ""
    echo "Usage: standard_space_roi <input> <output> [options] [flirt options]"
    echo ""
    echo "-ref <ref_image>  : standard space reference image to use (default $FSLDIR/etc/standard/avg152T1)"
    echo "-d                : debug (don't delete intermediate files)"
    echo ""
    exit
}

if [ _$FSLDIR = _ ] ; then
    FSLDIR=/usr/local/fsl
    export FSLDIR
fi

[ _$2 = _ ] && Usage

in=`${FSLDIR}/bin/remove_ext $1`;
if [ `${FSLDIR}/bin/imtest $in` = 0 ] ; then
    echo "standard space reference image not valid"
    Usage
fi
shift

out=`${FSLDIR}/bin/remove_ext $1`;
shift

debug=0

standard=${FSLDIR}/etc/standard/avg152T1

for opts in $@ ; do

    if [ $opts = -d ] ; then
        debug=1
        shift
    fi

    if [ $opts = -ref ] ; then
	standard=$2
	shift 2
    fi

done

if [ `${FSLDIR}/bin/imtest $standard` = 0 ] ; then
    echo "standard space reference image not valid"
    Usage
fi

${FSLDIR}/bin/flirt -in $in -ref $standard -o ${out}_tmp_to_tal -omat ${out}_tmp_to_tal.mat $@

${FSLDIR}/bin/convert_xfm -matonly -inverse -omat ${out}_tmp_to_tal_inv.mat ${out}_tmp_to_tal.mat

X=`${FSLDIR}/bin/avwval $standard dim1` ; X=`echo "$X 1 - p" | dc -`
Y=`${FSLDIR}/bin/avwval $standard dim2` ; Y=`echo "$Y 1 - p" | dc -`
Z=`${FSLDIR}/bin/avwval $standard dim3` ; Z=`echo "$Z 1 - p" | dc -`

xmin=$X ; xmax=0; ymin=$Y ; ymax=0; zmin=$Z ; zmax=0; 
for c in "0 0 0" "$X 0 0" "0 $Y 0" "$X $Y 0" "0 0 $Z" "$X 0 $Z" "0 $Y $Z" "$X $Y $Z" ; do
    x=`echo $c | img2imgcoord -src $standard -dest $in -xfm ${out}_tmp_to_tal_inv.mat -vox | grep -v voxels | awk '{print "0 k " $1 " 1 / p"}' | sed 's/-/_/g' | dc -`
    y=`echo $c | img2imgcoord -src $standard -dest $in -xfm ${out}_tmp_to_tal_inv.mat -vox | grep -v voxels | awk '{print "0 k " $2 " 1 / p"}' | sed 's/-/_/g' | dc -`
    z=`echo $c | img2imgcoord -src $standard -dest $in -xfm ${out}_tmp_to_tal_inv.mat -vox | grep -v voxels | awk '{print "0 k " $3 " 1 / p"}' | sed 's/-/_/g' | dc -`
    if [ $x -lt $xmin ] ; then xmin=$x ; fi
    if [ $x -gt $xmax ] ; then xmax=$x ; fi
    if [ $y -lt $ymin ] ; then ymin=$y ; fi
    if [ $y -gt $ymax ] ; then ymax=$y ; fi
    if [ $z -lt $zmin ] ; then zmin=$z ; fi
    if [ $z -gt $zmax ] ; then zmax=$z ; fi
done

X=`${FSLDIR}/bin/avwval $in dim1` ; X=`echo "$X 1 - p" | dc -`
Y=`${FSLDIR}/bin/avwval $in dim2` ; Y=`echo "$Y 1 - p" | dc -`
Z=`${FSLDIR}/bin/avwval $in dim3` ; Z=`echo "$Z 1 - p" | dc -`

if [ $xmin -lt 0 ] ; then xmin=0 ; fi
if [ $xmin -gt $X ] ; then xmin=$X ; fi
if [ $xmax -lt 0 ] ; then xmax=0 ; fi
if [ $xmax -gt $X ] ; then xmax=$X ; fi
if [ $ymin -lt 0 ] ; then ymin=0 ; fi
if [ $ymin -gt $Y ] ; then ymin=$Y ; fi
if [ $ymax -lt 0 ] ; then ymax=0 ; fi
if [ $ymax -gt $Y ] ; then ymax=$Y ; fi
if [ $zmin -lt 0 ] ; then zmin=0 ; fi
if [ $zmin -gt $Z ] ; then zmin=$Z ; fi
if [ $zmax -lt 0 ] ; then zmax=0 ; fi
if [ $zmax -gt $Z ] ; then zmax=$Z ; fi

xsize=`echo "1 $xmax + $xmin - p" | dc -`
ysize=`echo "1 $ymax + $ymin - p" | dc -`
zsize=`echo "1 $zmax + $zmin - p" | dc -`

${FSLDIR}/bin/avwroi $in $out $xmin $xsize $ymin $ysize $zmin $zsize

if [ $debug = 0 ] ; then
    /bin/rm ${out}_tmp*
fi

